spirit = spirit_servings,
wine = wine_servings)
drinks_smaller
# column names are values but not variable categories
library(tidyr)
drinks_smaller_tidy <- drinks_smaller %>%
tidyr::pivot_longer(cols = c(beer, spirit, wine), # which columns will need to form a new column
names_to = "type", # specify the new variable name
values_to = "servings") # specifiy the variable name of existing values
drinks_smaller_tidy %>%
mean(drinks_smaller_tidy$servings)
summarise(drinks_smaller_tidy, mean_serving = mean(servings))
library(tidyr)
drinks_smaller_tidy <- drinks_smaller %>%
tidyr::pivot_longer(cols = c(beer, spirit, wine), # which columns will need to form a new column
names_to = "type", # specify the new variable name
values_to = "servings") # specifiy the variable name of existing values
drinks_smaller_tidy %>%
mean(drinks_smaller_tidy$servings)
summarise(drinks_smaller_tidy, mean_serving = mean(servings))
## ---- Question-1 ------------------------------------------------------------
## 1.c
date <- c("7/12/2020", "7/13/2020", "7/14/2020", "7/15/2020", "7/16/2020", "7/17/2020", "7/18/2020", "7/19/2020", "7/20/2020", "7/21/2020", "7/22/2020", "7/23/2020", "7/24/2020","7/25/2020", "7/26/2020", "7/27/2020", "7/28/2020", "7/29/2020", "7/30/2020", "7/31/2020", "8/1/2020", "8/2/2020", "8/3/2020", "7/12/2020", "7/13/2020", "7/14/2020", "7/15/2020", "7/16/2020", "7/17/2020", "7/18/2020", "7/19/2020", "7/20/2020", "7/21/2020", "7/22/2020", "7/23/2020", "7/24/2020","7/25/2020", "7/26/2020", "7/27/2020", "7/28/2020", "7/29/2020", "7/30/2020", "7/31/2020", "8/1/2020", "8/2/2020", "8/3/2020")
cases <- c(25.5, 19.5, 19.5, 20.5, 19.5, 19.5, 20.5, 19.5, 20.5, 21.5, 19.5, 19.5, 20.5, 19.0, 19.5, 17.0, 16.0, 16.5, 16.5, 16.0, 16.2, 16.0, 16.1, 10.0,9.0, 9.5, 10.0, 10.0, 9.5, 9.5, 9.0, 8.5, 8.5, 8.6, 8.4, 10.0, 10.0, 10.1, 9.5, 9.5, 9.5, 10.0, 9.0, 9.1, 9.0, 9.1)
masks <- c("Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask")
cases_df <- data.frame(date, cases, masks)
cases_plot <- ggplot(cases_df, aes(x = date, y = cases, colour = masks)) +
geom_line(size = 1)
cases_plot
## ---- Question-1 ------------------------------------------------------------
## 1.c
date <- as.Date(c("2020-07-12", "2020-07-13", "2020-07-14", "2020-07-15", "2020-07-16", "2020-07-17",  "2020-07-18", "2020-07-19", "2020-07-20", "2020-07-21", "2020-07-22", "2020=07-23", "2020-07-24","2020-07-25", "2020-07-26", "2020-07-27", "2020-07-28", "2020-07-29", "2020-07-30", "2020-07-31", "2020-08-01", "2020-08-02", "2020-08-03", "2020-07-12", "2020-07-13", "2020-07-14", "2020-07-15", "2020-07-16", "2020-07-17",  "2020-07-18", "2020-07-19", "2020-07-20", "2020-07-21", "2020-07-22", "2020=07-23", "2020-07-24","2020-07-25", "2020-07-26", "2020-07-27", "2020-07-28", "2020-07-29", "2020-07-30", "2020-07-31", "2020-08-01", "2020-08-02", "2020-08-03"))
cases <- c(25.5, 19.5, 19.5, 20.5, 19.5, 19.5, 20.5, 19.5, 20.5, 21.5, 19.5, 19.5, 20.5, 19.0, 19.5, 17.0, 16.0, 16.5, 16.5, 16.0, 16.2, 16.0, 16.1, 10.0,9.0, 9.5, 10.0, 10.0, 9.5, 9.5, 9.0, 8.5, 8.5, 8.6, 8.4, 10.0, 10.0, 10.1, 9.5, 9.5, 9.5, 10.0, 9.0, 9.1, 9.0, 9.1)
masks <- c("Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask")
cases_df <- data.frame(date, cases, masks)
cases_plot <- ggplot(cases_df, aes(x = date, y = cases, colour = masks)) +
geom_line(size = 1)
cases_plot
cases_df
## ---- Question-1 ------------------------------------------------------------
## 1.c
date <- as.Date(c("2020-07-12", "2020-07-13", "2020-07-14", "2020-07-15", "2020-07-16", "2020-07-17",  "2020-07-18", "2020-07-19", "2020-07-20", "2020-07-21", "2020-07-22", "2020-07-23", "2020-07-24","2020-07-25", "2020-07-26", "2020-07-27", "2020-07-28", "2020-07-29", "2020-07-30", "2020-07-31", "2020-08-01", "2020-08-02", "2020-08-03", "2020-07-12", "2020-07-13", "2020-07-14", "2020-07-15", "2020-07-16", "2020-07-17",  "2020-07-18", "2020-07-19", "2020-07-20", "2020-07-21", "2020-07-22", "2020-07-23", "2020-07-24","2020-07-25", "2020-07-26", "2020-07-27", "2020-07-28", "2020-07-29", "2020-07-30", "2020-07-31", "2020-08-01", "2020-08-02", "2020-08-03"))
cases <- c(25.5, 19.5, 19.5, 20.5, 19.5, 19.5, 20.5, 19.5, 20.5, 21.5, 19.5, 19.5, 20.5, 19.0, 19.5, 17.0, 16.0, 16.5, 16.5, 16.0, 16.2, 16.0, 16.1, 10.0,9.0, 9.5, 10.0, 10.0, 9.5, 9.5, 9.0, 8.5, 8.5, 8.6, 8.4, 10.0, 10.0, 10.1, 9.5, 9.5, 9.5, 10.0, 9.0, 9.1, 9.0, 9.1)
masks <- c("Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask")
cases_df <- data.frame(date, cases, masks)
cases_plot <- ggplot(cases_df, aes(x = date, y = cases, colour = masks)) +
geom_line(size = 1)
cases_plot
## ---- Question-1 ------------------------------------------------------------
## 1.c
date <- as.Date(c("2020-07-12", "2020-07-13", "2020-07-14", "2020-07-15", "2020-07-16", "2020-07-17",  "2020-07-18", "2020-07-19", "2020-07-20", "2020-07-21", "2020-07-22", "2020-07-23", "2020-07-24","2020-07-25", "2020-07-26", "2020-07-27", "2020-07-28", "2020-07-29", "2020-07-30", "2020-07-31", "2020-08-01", "2020-08-02", "2020-08-03", "2020-07-12", "2020-07-13", "2020-07-14", "2020-07-15", "2020-07-16", "2020-07-17",  "2020-07-18", "2020-07-19", "2020-07-20", "2020-07-21", "2020-07-22", "2020-07-23", "2020-07-24","2020-07-25", "2020-07-26", "2020-07-27", "2020-07-28", "2020-07-29", "2020-07-30", "2020-07-31", "2020-08-01", "2020-08-02", "2020-08-03"))
cases <- c(25.5, 19.5, 19.5, 20.5, 19.5, 19.5, 20.5, 19.5, 20.5, 21.5, 19.5, 19.5, 20.5, 19.0, 19.5, 17.0, 16.0, 16.5, 16.5, 16.0, 16.2, 16.0, 16.1, 10.0,9.0, 9.5, 10.0, 10.0, 9.5, 9.5, 9.0, 8.5, 8.5, 8.6, 8.4, 10.0, 10.0, 10.1, 9.5, 9.5, 9.5, 10.0, 9.0, 9.1, 9.0, 9.1)
masks <- c("Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask")
cases_df <- data.frame(date, cases, masks)
cases_plot <- ggplot(cases_df, aes(x = date, y = cases, colour = masks)) +
geom_line(size = 1) +
labs(title = Kansas COVID-19 7-Day Rolling Average of Daily Cases per 100K Population)
cases_plot
## ---- Question-1 ------------------------------------------------------------
## 1.c
date <- as.Date(c("2020-07-12", "2020-07-13", "2020-07-14", "2020-07-15", "2020-07-16", "2020-07-17",  "2020-07-18", "2020-07-19", "2020-07-20", "2020-07-21", "2020-07-22", "2020-07-23", "2020-07-24","2020-07-25", "2020-07-26", "2020-07-27", "2020-07-28", "2020-07-29", "2020-07-30", "2020-07-31", "2020-08-01", "2020-08-02", "2020-08-03", "2020-07-12", "2020-07-13", "2020-07-14", "2020-07-15", "2020-07-16", "2020-07-17",  "2020-07-18", "2020-07-19", "2020-07-20", "2020-07-21", "2020-07-22", "2020-07-23", "2020-07-24","2020-07-25", "2020-07-26", "2020-07-27", "2020-07-28", "2020-07-29", "2020-07-30", "2020-07-31", "2020-08-01", "2020-08-02", "2020-08-03"))
cases <- c(25.5, 19.5, 19.5, 20.5, 19.5, 19.5, 20.5, 19.5, 20.5, 21.5, 19.5, 19.5, 20.5, 19.0, 19.5, 17.0, 16.0, 16.5, 16.5, 16.0, 16.2, 16.0, 16.1, 10.0,9.0, 9.5, 10.0, 10.0, 9.5, 9.5, 9.0, 8.5, 8.5, 8.6, 8.4, 10.0, 10.0, 10.1, 9.5, 9.5, 9.5, 10.0, 9.0, 9.1, 9.0, 9.1)
masks <- c("Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask", "No Mask")
cases_df <- data.frame(date, cases, masks)
cases_plot <- ggplot(cases_df, aes(x = date, y = cases, colour = masks)) +
geom_line(size = 1) +
labs(title = "Kansas COVID-19 7-Day Rolling Average of Daily Cases per 100K Population")
cases_plot
install.packages("here")
## ---- Setup ------------------------------------------------------------------
# set default chunk options here
knitr::opts_chunk$set(
echo = FALSE,          # don't show code
warning = FALSE,       # don't show warnings
message = FALSE,       # don't show messages (less serious warnings)
cache = FALSE,         # set to TRUE to save results from last compilation
fig.align = "center",   # center figures
fig.asp = 1          # fig.aspect ratio
)
library(pacman)
p_load(ggplot2, tidyverse, here)
df <- data.frame(
a = rnorm(10),
b = rnorm(10),
c = rnorm(10),
d = rnorm(10)
)
df
?rnorm
output <- numeric(ncol(df))
output
# initialize the object
for (i in 1:(ncol(df))){    # i - variable meant to take different values
# take value between 1 : the # of columns
# typically take integer values
# alternatively
# for (i in seq_along(df)){
output[i] <- median(df[,i]) # save the result the result of the loop
}
output
mtcars
x <- ncol(df)
y <- numeric(ncol(df))
x
y
mtcars_mean <- numeric(ncol(mtcars))
for(i in 1:ncol(mtcars)){
mtcars_mean[i] <- mean(mtcars[,i])
}
mtcars_mean
?unique
unique(iris[,1])
count(unique(iris[,1]))
library(dplyr)
count(unique(iris[,1]))
?unique
unique(iris[,1])
iris
iris_v <- length(unique(iris[,i]))
length(unique(iris[,1]))
ncol(iris)
for(i in 1:ncol(iris)){
iris_v <- length(unique(iris[,i]))
}
iris_v
iris_v
iris_v <- numeric(ncol(iris))
for(i in 1:ncol(iris)){
iris_v[i] <- length(unique(iris[,i]))
}
iris_v
flip <- function() sample(c("T", "H"), 1)
flips <- 0
nheads <- 0
while (nheads < 3) {
if (flip() == "H") {
nheads <- nheads + 1
} else {
nheads <- 0
}
flips <- flips + 1
}
flips
flips
#> [1] 21
### 5.1.3 If, else, ifelse
flips
while (nheads < 3) {
if (flip() == "H") {
nheads <- nheads + 1
} else {
nheads <- 0
}
flips <- flips + 1
}
flips
while (nheads < 3) {
if (flip() == "H") {
nheads <- nheads + 1
} else {
nheads <- 0
}
flips <- flips + 1
}
flips
while (nheads < 3) {
if (flip() == "H") {
nheads <- nheads + 1
} else {
nheads <- 0
}
flips <- flips + 1
}
flips
while (nheads < 3) {
if (flip() == "H") {
nheads <- nheads + 1
} else {
nheads <- 0
}
flips <- flips + 1
}
flips
while (nheads < 3) {
if (flip() == "H") {
nheads <- nheads + 1
} else {
nheads <- 0
}
flips <- flips + 1
}
flips
while (nheads < 3) {
if (flip() == "H") {
nheads <- nheads + 1
} else {
nheads <- 0
}
flips <- flips + 1
}
flips
while (nheads < 3) {
if (flip() == "H") {
nheads <- nheads + 1
} else {
nheads <- 0
}
flips <- flips + 1
}
flips
while (nheads < 3) {
if (flip() == "H") {
nheads <- nheads + 1
} else {
nheads <- 0
}
flips <- flips + 1
}
flips
while (nheads < 3) {
if (flip() == "H") {
nheads <- nheads + 1
} else {
nheads <- 0
}
flips <- flips + 1
}
while (nheads < 3) {
if (flip() == "H") {
nheads <- nheads + 1
} else {
nheads <- 0
}
flips <- flips + 1
}
while (nheads < 3) {
if (flip() == "H") {
nheads <- nheads + 1
} else {
nheads <- 0
}
flips <- flips + 1
}
while (nheads < 3) {
if (flip() == "H") {
nheads <- nheads + 1
} else {
nheads <- 0
}
flips <- flips + 1
}
flips
watermelon <- F
ifelse(watermelon == TRUE, yes = "Buy 1 orange", no = "Buy 6 oranges")
ifelse(test = numbers >= 65, yes = TRUE, no =FALSE)
numbers <- c(105, 75, 43, 56, 89, 33)
ifelse(test = numbers >= 65, yes = TRUE, no =FALSE)
ifelse(test = numbers >= 65, yes = 1, no =2)
for(i in 1:10000){
s <- sample(cards, 5) # Random draw of 5 cards
n <- length(s) # Number of suits in this draw
obs[n] <- obs[n] + 1
}
cards <- rep(c("diamonds", "clubs", "spades", "hearts"),13)
for(i in 1:10000){
s <- sample(cards, 5) # Random draw of 5 cards
n <- length(s) # Number of suits in this draw
obs[n] <- obs[n] + 1
}
obs
obs <- as.integer
obs
obs <- as.data.frame(4)
obs <- numeric(4) # need to initialize obs
for(i in 1:10000){
s <- sample(cards, 5) # Random draw of 5 cards
n <- length(s) # Number of suits in this draw
obs[n] <- obs[n] + 1
}
barplot(obs/sum(obs),
main = "Number of Suits in a Random Draw of 5 Poker Cards",
xlab = "Number of suits",
ylab = "Estimated probability",
names.arg = 1:4)
obs
for(i in 1:10000){
s <- sample(cards, 5) # Random draw of 5 cards
n <- length(s) # Number of suits in this draw
obs[n] <- obs[n] + 1
}
obs
obs <- numeric(4) # need to initialize obs
for(i in 1:10000){
s <- sample(cards, 5) # Random draw of 5 cards
n <- length(s) # Number of suits in this draw
obs[n] <- obs[n] + 1
}
obs <- numeric(4) # need to initialize obs
ibs
obs
s <- sample(cards, 5) # Random draw of 5 cards
n <- length(s) # Number of suits in this draw
s
n
s <- sample(cards, 5) # Random draw of 5 cards
n <- length(s) # Number of suits in this draw
s
n
set.seed(3)
for(i in 1:3){
print(paste("iteration", i))
s <- sample(cards, 5) # s: Random draw of 5 cards
print(s)
n <- length(s) # n: Number of suits in this draw
print(n)
obs[n] <- obs[n] + 1
print(obs)
}
for(i in 1:3){
print(paste("iteration", i))
s <- sample(cards, 5) # s: Random draw of 5 cards
print(s)
n <- length(s) # n: Number of suits in this draw
print(n)
obs[n] <- obs[n] + 1
print(obs)
}
set.seed(3)
for(i in 1:3){
print(paste("iteration", i))
s <- sample(cards, 5) # s: Random draw of 5 cards
print(s)
n <- length(s) # n: Number of suits in this draw
print(n)
obs[n] <- obs[n] + 1
print(obs)
}
n <- length(unique(s)) # n: Number of suits in this draw
print(n)
s <- sample(cards, 5) # s: Random draw of 5 cards
n <- length(unique(s)) # n: Number of suits in this draw
obs[n] <- obs[n] + 1
obs
barplot(obs/sum(obs),
main = "Number of Suits in a Random Draw of 5 Poker Cards",
xlab = "Number of suits",
ylab = "Estimated probability",
names.arg = 1:4)
set.seed(3)
for(i in 1:10000){
s <- sample(cards, 5) # s: Random draw of 5 cards
n <- length(unique(s)) # n: Number of suits in this draw
obs[n] <- obs[n] + 1
}
barplot(obs/sum(obs),
main = "Number of Suits in a Random Draw of 5 Poker Cards",
xlab = "Number of suits",
ylab = "Estimated probability",
names.arg = 1:4)
n <- length(unique(s)) # n: Number of suits in this draw
obs[n] <- obs[n] + 1
for(i in 1:10000){
s <- sample(cards, 5) # s: Random draw of 5 cards
n <- length(unique(s)) # n: Number of suits in this draw
obs[n] <- obs[n] + 1
}
barplot(obs/sum(obs),
main = "Number of Suits in a Random Draw of 5 Poker Cards",
xlab = "Number of suits",
ylab = "Estimated probability",
names.arg = 1:4)
set.seed(3)
for(i in 1:10000){
s <- sample(cards, 5) # s: Random draw of 5 cards
n <- length(unique(s)) # n: Number of suits in this draw
obs[n] <- obs[n] + 1
}
barplot(obs/sum(obs),
main = "Number of Suits in a Random Draw of 5 Poker Cards",
xlab = "Number of suits",
ylab = "Estimated probability",
names.arg = 1:4)
# Initialise obs
# obs[n]: number of trials in which we draw n different suits
obs <- numeric(4)
cards <- rep(c("diamonds", "clubs", "spades", "hearts"),13)
set.seed(3)
for(i in 1:10000){
s <- sample(cards, 5) # s: Random draw of 5 cards
n <- length(unique(s)) # n: Number of suits in this draw
obs[n] <- obs[n] + 1
}
barplot(obs/sum(obs),
main = "Number of Suits in a Random Draw of 5 Poker Cards",
xlab = "Number of suits",
ylab = "Estimated probability",
names.arg = 1:4)
map(df, mean)
# Load dependencies
library(tidyverse, purrr)
map(df, mean)
df
df %>% map_dbl(median)
df %>% map_dbl(median)
df %>% map_dbl(mean)
df %>% map_dbl(median)
pacman::p_load(tidyverse)
library(lapply)
library(lapply)
# Load dependencies
library(tidyverse, purrr, lapply)
lapply(df, mean)
# output is a list
sapply(df, mean)
x1 <- list(
c(0.27, 0.37, 0.57, 0.91, 0.20),
c(0.90, 0.94, 0.66, 0.63, 0.06),
c(0.21, 0.18, 0.69, 0.38, 0.77)
)
x2 <- list(
c(0.50, 0.72, 0.99, 0.38, 0.78),
c(0.93, 0.21, 0.65, 0.13, 0.27),
c(0.39, 0.01, 0.38, 0.87, 0.34)
)
threshold <- function(x, cutoff = 0.8) x[x > cutoff]
x1 %>% sapply(threshold) %>% str()
#> List of 3
#>  $ : num 0.91
#>  $ : num [1:2] 0.9 0.94
#>  $ : num(0)
x2 %>% sapply(threshold) %>% str()
theme_set(theme_minimal())
pacman::p_load(tidyverse, readr, here, ggplot2, mosaic)
theme_set(theme_minimal())
?binom.test
months <- c(rep("june2014", 2)
rep("july2014", 2),
rep("august2014", 2)
)
# X = 0 --> Standard, X = 1 --> PPF treated
exposed <- c(0, 1, 0, 1, 0, 1)
PT <- c(79,0, 123, 0, 103, 23)
cases <- c(33, 0, 454, 0, 244, 43)
df <- data.frame(month, expsoed, PT, cases)
df$incidence <- df$cases / df$PT
months <- c(rep("june2014", 2),
rep("july2014", 2),
rep("august2014", 2)
)
exposed <- c(0, 1, 0, 1, 0, 1)
PT <- c(79,0, 123, 0, 103, 23)
cases <- c(33, 0, 454, 0, 244, 43)
df <- data.frame(month, expsoed, PT, cases)
df$incidence <- df$cases / df$PT
# X = 0 --> Standard, X = 1 --> PPF treated
exposed <- c(0, 1, 0, 1, 0, 1)
PT <- c(79,0, 123, 0, 103, 23)
cases <- c(33, 0, 454, 0, 244, 43)
df <- data.frame(month, exposed, PT, cases)
df <- data.frame(month, exposed, PT, cases)
month <- c(rep("june2014", 2),
rep("july2014", 2),
rep("august2014", 2)
)
# X = 0 --> Standard, X = 1 --> PPF treated
exposed <- c(0, 1, 0, 1, 0, 1)
PT <- c(79,0, 123, 0, 103, 23)
cases <- c(33, 0, 454, 0, 244, 43)
df <- data.frame(month, exposed, PT, cases)
df$incidence <- df$cases / df$PT
df
glm(cases ~ exposed + offset = log(PT), family = poisson(link = log), data = df)
fit <- glm(cases ~ exposed + offset = log(PT), family = poisson(link = log), data = df)
fit
fit <- glm(cases ~ exposed + offset = log(PT), family = poisson(link = log), data = df)
fit <- glm(cases ~ exposed + offset(log(PT)), family = poisson(link = log), data = df)
## ----eval=TRUE, echo=FALSE----------------------------------------------------
df <- data.frame(month = rep(c(paste0(c("june","july","august","september","october",
"november","december"),"2014"),
paste0(c("may"),"2015"),
paste0(c("june","july","august","september","october",
"november","december"),"2015")
),
each = 2),
exposure = rep(c(0,1), 15),
years = c(79,0,123,0,103,23,79,39,81,63,78,81,80,84,
89,82,
59,77,54,99,29,123,0,139,0,166,0,185,0,189),
cases = c(33,0,454,0,244,43,177,66,212,155,193,170,111,92,
15,14,42,50,146,223,64,266,0,271,0,337,0,304,0,56)
)
df <- df[-which(df$years==0),]
df
## ----echo=FALSE, eval=TRUE----------------------------------------------------
fit <- glm(cases ~ exposure + offset(log(years)),
data = df, family = poisson(link = log))
print(summary(fit), signif.stars = F, show.call=TRUE)
## ---- Setup -----------------------------------------------------------------
knitr::opts_chunk$set( echo = TRUE,
warning = FALSE, message = FALSE, cache = FALSE, fig.align = "center", fig.asp = 1, fig.width = 10
)
library(pacman)
p_load(ggplot2, tidyverse, here, readxl, mosaic, pwr, ggpubr, car)
theme_set(theme_light())
# Set-up
df_fh <- readr::read_csv(here::here("fetal_health.csv")) %>%
select(!starts_with("histogram"))
setwd("~/Desktop/M1/EPIB607/Final Project")
```{r}
# Set-up
df_fh <- readr::read_csv(here::here("fetal_health.csv")) %>%
select(!starts_with("histogram"))
